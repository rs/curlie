package args

import "sort"

var (
	curlShortValues = "EKCbcdDFPHhmoxUQreXYytzTuAw"
	curlLongValues  = []string{
		"abstract-unix-socket",
		"alt-svc",
		"aws-sigv4",
		"cacert",
		"capath",
		"cert",
		"cert-type",
		"ciphers",
		"config",
		"connect-timeout",
		"connect-to",
		"continue-at",
		"cookie",
		"cookie-jar",
		"create-file-mode",
		"crlfile",
		"curves",
		"data",
		"data-ascii",
		"data-binary",
		"data-raw",
		"data-urlencode",
		"delegation",
		"dns-interface",
		"dns-ipv4-addr",
		"dns-ipv6-addr",
		"dns-servers",
		"doh-url",
		"dump-header",
		"ech",
		"egd-file",
		"engine",
		"etag-compare",
		"etag-save",
		"expect100-timeout",
		"form",
		"form-string",
		"ftp-account",
		"ftp-alternative-to-user",
		"ftp-method",
		"ftp-port",
		"ftp-ssl-ccc-mode",
		"happy-eyeballs-timeout-ms",
		"haproxy-clientip",
		"header",
		"help",
		"hostpubmd5",
		"hostpubsha256",
		"hsts",
		"interface",
		"ip-tos",
		"ipfs-gateway",
		"json",
		"keepalive-cnt",
		"keepalive-time",
		"key",
		"key-type",
		"krb",
		"libcurl",
		"limit-rate",
		"local-port",
		"login-options",
		"mail-auth",
		"mail-from",
		"mail-rcpt",
		"max-filesize",
		"max-redirs",
		"max-time",
		"netrc-file",
		"noproxy",
		"oauth2-bearer",
		"output",
		"output-dir",
		"parallel-max",
		"pass",
		"pinnedpubkey",
		"preproxy",
		"proto",
		"proto-default",
		"proto-redir",
		"proxy",
		"proxy-cacert",
		"proxy-capath",
		"proxy-cert",
		"proxy-cert-type",
		"proxy-ciphers",
		"proxy-crlfile",
		"proxy-header",
		"proxy-key",
		"proxy-key-type",
		"proxy-pass",
		"proxy-pinnedpubkey",
		"proxy-service-name",
		"proxy-tls13-ciphers",
		"proxy-tlsauthtype",
		"proxy-tlspassword",
		"proxy-tlsuser",
		"proxy-user",
		"proxy1.0",
		"pubkey",
		"quote",
		"random-file",
		"range",
		"rate",
		"referer",
		"request",
		"request-target",
		"resolve",
		"retry",
		"retry-delay",
		"retry-max-time",
		"sasl-authzid",
		"service-name",
		"sigalgs",
		"socks4",
		"socks4a",
		"socks5",
		"socks5-gssapi-service",
		"socks5-hostname",
		"speed-limit",
		"speed-time",
		"ssl-sessions",
		"stderr",
		"telnet-option",
		"tftp-blksize",
		"time-cond",
		"tls-max",
		"tls13-ciphers",
		"tlsauthtype",
		"tlspassword",
		"tlsuser",
		"trace",
		"trace-ascii",
		"trace-config",
		"unix-socket",
		"upload-file",
		"upload-flags",
		"url",
		"url-query",
		"user",
		"user-agent",
		"variable",
		"vlan-priority",
		"write-out"}
)

func init() {
	// add --expand-* variants for all value-taking options.
	for i, n := 0, len(curlLongValues); i < n; i++ {
		curlLongValues = append(curlLongValues, "expand-"+curlLongValues[i])
	}

	sort.Strings(curlLongValues)
}
